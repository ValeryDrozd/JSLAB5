!function(){"use strict";function e(){let e=localStorage.getItem("cart");return e=null!=e?JSON.parse(e):{items:[],amount:{},number:0},e}function t(t){let i=e(),d="";d+='<p style="font-size: 1.2em;font-weight: bolder;" >'+t.productName+"</p>",d+='<hr style="width:80%;">',d+='<p style="margin-bottom:0;"> '+t.productDescription+(1==t.spicy?'<font style="color:red">Spicy.</font>':"")+" </p>",d+="<span>";for(let e=0;e<t.radius.length;e++)d+='<span style="margin-right:20px;"><input type="radio" style="margin-right:5px;" onchange="changeElem('+t.id+","+t.price[e]+')" name="'+t.id+'" '+(0==e?"checked":"")+' value = "'+e+'" >'+t.radius[e]+"</span>";return d+="</span><br>",d+=' <span id="unitprice'+t.id+'" > One item price: '+t.price[0]+" UAH</span><br>",d+=' <button id="buy'+t.id+'" value = "'+t.price[0]+'" class="buy" '+(i.amount[String([t.id,0])]>=1?"style = 'background-color:#2ECC71;'":"")+' onclick="buy('+t.id+')">'+(i.amount[String([t.id,0])]>=0?"In the cart":"Buy")+"</button>",d}function i(e){let i=' <div class="good">';return i+='<img src="./images/'+e.url+'.jpg" alt = "image" class="goodImg" data-path="#products/'+e.id+'" >',i+=t(e),i+="</div>",i}async function d(e){let t;"all"!=e&&(t=await fetch("https://my-json-server.typicode.com/ValeryDrozd/Valerydrozd.github.io/categories/"+e).then((e=>e.json())),t=t.values);let d=await fetch("https://my-json-server.typicode.com/ValeryDrozd/Valerydrozd.github.io/products").then((e=>e.json())),n="",r="all"==e?d.length:t.length;for(let a=0;a<r;a++)n+=i("all"!=e?d[t[a]]:d[a]);return n}async function n(){let i=window.location.hash,n=document.querySelectorAll("header button");for(let e=0;e<n.length;e++)n[e].style.backgroundColor="darkorange";switch(document.getElementById("amount").innerText=await e().number,i){case"#sushi":document.getElementById("sushiBtn").style.backgroundColor="#F9E79F",document.getElementById("content").innerHTML='<div class = "goods" id="goodsField"><img src="./images/loading.svg" alt="loadimage" style="width: 100%;height: 250px;"></div>',document.getElementById("goodsField").innerHTML=await d("sushi");break;case"#pizza":document.getElementById("pizzaBtn").style.backgroundColor="#F9E79F",document.getElementById("content").innerHTML='<div class = "goods" id="goodsField"><img src="./images/loading.svg" alt="loadimage" style="width: 100%;height: 250px;"></div>',document.getElementById("goodsField").innerHTML=await d("pizza");break;case"#drinks":document.getElementById("drinkBtn").style.backgroundColor="#F9E79F",document.getElementById("content").innerHTML='<div class = "goods" id="goodsField"><img src="./images/loading.svg" alt="loadimage" style="width: 100%;height: 250px;"></div>',document.getElementById("goodsField").innerHTML=await d("drinks");break;case"#cart":document.getElementById("cartBtn").style.backgroundColor="#F9E79F",document.getElementById("content").innerHTML='<div id="orderList"><img src="./images/loading.svg" alt="loadimage" style="width: 100%;height: 250px;"></div>',document.getElementById("orderList").innerHTML=await async function(){let t=e();if(0==t.number)return"<h1>Your cart is empty... Buy something!</h1>";let i=await fetch("https://my-json-server.typicode.com/ValeryDrozd/Valerydrozd.github.io/products").then((e=>e.json())),d='<div id="list"><table>';d+="<tr>",d+='<td class="image"></td>',d+='<td class="name" >Product name</td>',d+='<td class="size" >Product size</td>',d+='<td class="empty" ></td>',d+='<td class="oneitemprice">One item price</td>',d+='<td class="less"> </td>',d+='<td class="amount"> Amount of item</td>',d+='<td class="more"> </td>',d+="<td>Full position price</td>",d+='<td class="remove"></td>',d+="</tr>";let n=0;for(let e=0;e<t.items.length;e++){let r=t.items[e][0]-1,a=1*t.items[e][1],l=i[r];d+='<tr id="elem'+r+","+a+'">',d+='<td class="image" >',d+='<img src= "./images/'+l.url+'.jpg" alt=itemImage >',d+="</td>",d+='<td class="name">',d+=String(l.productName),d+="</td>",d+='<td class="size" >',d+=String(l.radius[a]),d+="</td>",d+='<td class="empty"></td>',d+='<td class="price" >',d+=String(l.price[1*a]),d+="</td>",d+='<td class="less change" onclick=decrease('+r+","+a+","+l.price[1*a]+") >",d+="Less",d+="</td>",d+='<td class="amount" id=amount'+String(r)+String(a)+">",d+=String(t.amount[t.items[e]]),n+=t.amount[t.items[e]]*l.price[1*a],d+="</td>",d+='<td class="increase change" onclick="increase('+r+","+a+","+String(l.price[1*a])+')" >',d+="More",d+="</td>",d+='<td class="allsum" id="sum'+String(r)+String(a)+'">',d+=String(t.amount[t.items[e]]*l.price[1*a])+"UAH",d+="</td>",d+='<td class="remove change" onclick="remove('+r+","+a+","+String(l.price[1*a])+')" >',d+="Remove",d+="</td>",d+="</tr>"}return d+="</table></div>",d+='<hr style="width:80%;">',d+='<table class="itemList"><tr><td style="font-weight:bolder;height:100%;"> All price </td><td></td><td></td><td></td><td id="allsum" style="font-weight:bolder">'+n+"UAH</td></tr></table>",d+='<button id="confirm" data-path="#order"> CONFIRM </button></div>',d+='<button id="clearorderlist" data-path="all"> Clear order list </button></div>',d}(),document.getElementById("confirm").addEventListener("click",jump),document.getElementById("clearorderlist").addEventListener("click",clearOrderList);break;case"#order":if(e().number>0){document.getElementById("orderBtn").style.backgroundColor="#F9E79F",document.getElementById("content").innerHTML='<div id="container"><div id="form"><label for="name">Enter your name</label><br><input type="text" id="name" required placeholder="Name"><br><label for="surname" required>Enter your name</label><br><input type="text" id="surname" placeholder="Surname"> <br><label for="phone" required placeholder="mobile">Enter mobile phone</label><br><input class="input" type="text" id="phone" required placeholder="0981234567"><br><label for="email">Enter email</label><br><input class="input" type="email" id="email" required placeholder="some@example.com"><br><label for="delCity">Enter delivery city</label><br><select id="delCity"> <option value="Lviv" selected > Lviv </option><option value="Kyiv" selected > Kyiv </option> <option value="Khmelnytskyi" selected > Khmelnytskyi </option></select><br><label for="address">Enter delivery address</label><br><input type="text" id="address" required placeholder="some-street 21/54"><br><label for="deldate">Delivery date and time</label><br><input type="datetime-local" id="deldate"><br><label>Enter way to pay</label><br><br><label for="paycard">    Now</label><br><input type="radio" name="pay" id="paycard"  checked onclick="hideshow(2)" style="margin: initial;font:initial;font-size: 1.4em;width: initial;"><br><label for="paycash">    On delivery</label><br><input type="radio" name="pay" onclick="hideshow(1)" id="paycash" style="margin: initial;font:initial;font-size: 1.4em;width: initial;"><div id="cardcreds"><label for="cnumber" required>Card number</label><br><input type="text" id="cnumber"><br><label for="cvv">Enter cvv code</label><br><input type="password" id="cvv" required><br><label for="dateofexpire">Date of expire</label><br><input type="email" id="dateofexpire" placeholder="06/06"><br><label for="city">Enter city</label><br><input type="text" id="city"></br></div><button id="buybutton" onclick="makeorder()"> Make order </button></div>';break}i="#all";case"#all":document.getElementById("allBtn").style.backgroundColor="#F9E79F",document.getElementById("content").innerHTML='<span><h1 style="margin-left:10px;margin-top: 0px;">Pizzas</h1></span><div class = "goods" id="PizzaField"><img src="./images/loading.svg" alt="loadimage" style="width: 100%;height: 250px;"></div><span><h1 style="margin-left:10px;margin-top: 0px;">Sushies</h1></span><div class = "goods" id="SushiField"><img src="./images/loading.svg" alt="loadimage" style="width: 100%;height: 250px;"></div><span><h1 style="margin-left:10px;margin-top: 0px;">Drinks</h1></span><div class = "goods" id="DrinksField"><img src="./images/loading.svg" alt="loadimage" style="width: 100%;height: 250px;"></div>',document.getElementById("PizzaField").innerHTML=await d("pizza"),document.getElementById("SushiField").innerHTML=await d("sushi"),document.getElementById("DrinksField").innerHTML=await d("drinks");break;case i:if(1==await async function(e){let t=e.substr(e.indexOf("#")+1,e.indexOf("/")-1),i=e.substr(e.indexOf("/")+1);if("products"==t){let e=await fetch("https://my-json-server.typicode.com/ValeryDrozd/Valerydrozd.github.io/products").then((e=>e.json()));for(let t=0;t<e.length;t++)if(String(e[t].id)==i)return!0;return!1}if("promos"==t){let e=await fetch("https://my-json-server.typicode.com/ValeryDrozd/Valerydrozd.github.io/promos").then((e=>e.json()));for(let t=0;t<e.length;t++)if(String(e[t].id)==i)return!0;return!1}if("order"==t){let e=JSON.parse(localStorage.getItem("orders"));return null!=e&&-1!=e.orderids.indexOf(i)}return!1}(i)){let e=i.substr(i.indexOf("#")+1,i.indexOf("/")-1);if("products"==e){document.getElementById("content").innerHTML='<div id="item"><div id="image"><img src="./images/loading.svg" alt="loadimage" style="width: 100%;height: 100%;"></div><div id="desc"><img src="./images/loading.svg" alt="loadimage" style="width: 100%;height: 100%;"></div></div>',async function(e){let i=await fetch("https://my-json-server.typicode.com/ValeryDrozd/Valerydrozd.github.io/"+e.substring(1)).then((e=>e.json()));document.getElementById("image").innerHTML='<img src= "./images/'+i.url+'.jpg" >';let d=t(i);document.getElementById("desc").innerHTML=d}(i);break}if("promos"==e){document.getElementById("content").innerHTML='<div id="promoContainer" ><div id="promoImage"><img src="./images/loading.svg" alt="loadimage" style="width: 100%;height: 250px;"></div><div id="promoDescription"><img src="./images/loading.svg" alt="loadimage" style="width: 100%;height: 250px;"></div></div>',async function(e){let t=await fetch("https://my-json-server.typicode.com/ValeryDrozd/Valerydrozd.github.io/"+e.substr(1)).then((e=>e.json()));document.getElementById("promoImage").innerHTML='<img src="./images/'+t.images+'.jpg" alt="promoimage">';let i='<h2 style="text-align:center;">'+t.title+"</h2><br>";i+='<p style="font-size:1.1em;font-weight:bolder">'+t.description+"</p>",i+='<p style="font-size:1.2em;font-weight:bolder">Time when promo is avaiable: '+t.time+"</p>",document.getElementById("promoDescription").innerHTML=i}(i);break}if("order"==e){document.getElementById("content").innerHTML='<div id="orderList"><img src="./images/loading.svg" alt="loadimage" style="width: 100%;height: 250px;"></div>',async function(e){let t=getOrder(),i=t.ordercart[e],d=await fetch("https://my-json-server.typicode.com/ValeryDrozd/Valerydrozd.github.io/products").then((e=>e.json())),n='<div id="list"><h3 style="text-align:center;">Order id:'+e+"</h3><table>";n+="<tr>",n+='<td class="image"></td>',n+='<td class="name" >Product name</td>',n+='<td class="size" >Product size</td>',n+='<td class="empty" ></td>',n+='<td class="oneitemprice">One item price</td>',n+='<td class="amount"> Amount of item</td>',n+="<td>Full position price</td>",n+="</tr>";let r=0;for(let e=0;e<i.items.length;e++){let t=i.items[e][0]-1,a=1*i.items[e][1],l=d[t];n+='<tr id="elem'+t+","+a+'">',n+='<td class="image" >',n+='<img src= "./images/'+l.url+'.jpg" alt=itemImage >',n+="</td>",n+='<td class="name">',n+=String(l.productName),n+="</td>",n+='<td class="size" >',n+=String(l.radius[a]),n+="</td>",n+='<td class="empty"></td>',n+='<td class="price" >',n+=String(l.price[1*a]),n+="</td>",n+='<td class="amount" id=amount'+String(t)+String(a)+">",n+=String(i.amount[i.items[e]]),n+="</td>",n+='<td class="allsum" id="sum'+String(t)+String(a)+'">',n+=String(i.amount[i.items[e]]*l.price[1*a])+"UAH",n+="</td></tr>",r+=i.amount[i.items[e]]*l.price[1*a]}n+='</table><h3 style="text-align:center">Final sum '+r+"UAH</h3>";let a=new Date(t.orderdata[e].deliverydate);n+='<h4 style="text-align:center;">Order will be delivered to '+t.orderdata[e].delCity+" "+t.orderdata[e].address+" at "+a.getDate()+" ,"+a.getHours()+":"+a.getMinutes(),n+="</h4></div>",document.getElementById("orderList").innerHTML=n}(i.substr(i.indexOf("/")+1));break}}window.location.hash="";default:document.getElementById("mainBtn").style.backgroundColor="#F9E79F",document.getElementById("content").innerHTML='<div id = "promos"><div id="carousel">    <img src="./images/loading.svg" alt="loadimage" style="width: 100%;height: 100%;"></div><div id="buttons"><button id="prevbutton" onclick="slideleft()">Previous</button><button id="nextbutton" onclick="slideright()">Next</button></div></div><hr><span><h1 style="margin-left:10px;margin-top: 0px;">The most popular orders</h1></span><div class = "goods" id="goodsField">    <img src="./images/loading.svg" alt="loadimage" style="width: 100%;height: 250px;"></div>';let n=await d("recommended");document.getElementById("goodsField").innerHTML=n,await async function(){let e=await fetch("https://my-json-server.typicode.com/ValeryDrozd/Valerydrozd.github.io/promos").then((e=>e.json())),t="";for(let i=0;i<e.length;i++)t+='<img class="promoImg" src="./images/'+e[i].images+'.jpg" alt="promoimage" data-path="#promos/'+e[i].id+'")> ';document.getElementById("carousel").innerHTML=t}(),document.getElementById("prevbutton").style.display="inline-block",document.getElementById("nextbutton").style.display="inline-block",document.querySelectorAll(".promoImg").forEach((e=>{e.addEventListener("click",jump)}))}0!=document.querySelectorAll(".good img").length&&document.querySelectorAll(".good img").forEach((e=>{e.addEventListener("click",jump)}))}async function r(){const e=this.getAttribute("data-path");window.location.hash=e,await n()}window.addEventListener("load",(async function(){await async function(){document.querySelectorAll(".nav").forEach((e=>{e.addEventListener("click",r)})),await n()}()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,